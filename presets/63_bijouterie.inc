/* 
POVRay include file
Description: Preset file for scene generated with 63zaika.py

    Diamond shapes, acquired from
    POV-Ray Gems at https://github.com/syanenko/povgems
    rotated with time-dependent random.

    Texture and interior are cheap (to reduce rendering time),
    but you can always take realistic ones from POV-Ray Gems.

https://github.com/Dnyarri/POVmosaic
Read project help.html for options description.
Author: Ilya Razmanov
 {#008800, 0} */

global_settings{
    max_trace_level 7
    adc_bailout 1/256
    ambient_light <0.0, 0.0, 0.0>
}

// Self-rendering block below
#if (substr(input_file_name, strlen(input_file_name) - 3, 4) = ".inc")
  #declare X = 1;
  #declare Y = 1;
#end
// Self-rendering block end

#declare yes_color = 1;

background{color rgbft <1, 1, 1, 1, 1>}

#declare f_val = 0.7;
#declare t_val = 0.0;

#declare thingie_finish = finish {
        specular 1
        roughness 0.001
        ambient 0
        diffuse 0
        reflection {0.9 fresnel on} conserve_energy
      }

#declare thething_interior = interior {ior 2.5 fade_power 1.5 fade_distance (1 / max(X, Y)) fade_color <0.0, 0.5, 1.0>};

#declare move_map = <0, 0, 10>;
#declare scale_map = -0.5 * <1, 1, 1>;

#local timeseed_x = seed(int(now*100000));  // Seeding time
#local timerand_x = rand(timeseed_x);       // Time-dependent random
#local timeseed_y = seed(int(now*200000));  // Seeding time
#local timerand_y = rand(timeseed_y);       // Time-dependent random
#local timeseed_z = seed(int(now*300000));  // Seeding time
#local timerand_z = rand(timeseed_z);       // Time-dependent random

#declare rotate_rnd = <180 * timerand_x, 180 * timerand_y, 180 * timerand_z>;
#declare move_rnd = <0, 0, 2>;

#declare thingie = mesh {
triangle{<-0.360480, 0.870275, -0.132461>, <-0.360480, 0.870275, -0.168586>, <-0.000000, 0.941979, -0.168586>}
triangle{<-0.360480, 0.870275, -0.132461>, <-0.000000, 0.941979, -0.168586>, <-0.000000, 0.941979, -0.132461>}
triangle{<-0.360480, 0.870275, -0.168586>, <-0.360480, 0.870275, -0.132461>, <-0.666080, 0.666080, -0.132461>}
triangle{<-0.360480, 0.870275, -0.168586>, <-0.666080, 0.666080, -0.132461>, <-0.666080, 0.666080, -0.168586>}
triangle{<-0.666080, 0.666080, -0.168586>, <-0.666080, 0.666080, -0.132461>, <-0.870275, 0.360480, -0.132461>}
triangle{<-0.666080, 0.666080, -0.168586>, <-0.870275, 0.360480, -0.132461>, <-0.870275, 0.360480, -0.168586>}
triangle{<-0.870275, 0.360480, -0.168586>, <-0.870275, 0.360480, -0.132461>, <-0.941979, 0.000000, -0.132461>}
triangle{<-0.870275, 0.360480, -0.168586>, <-0.941979, 0.000000, -0.132461>, <-0.941979, 0.000000, -0.168586>}
triangle{<-0.941979, 0.000000, -0.168586>, <-0.941979, 0.000000, -0.132461>, <-0.870275, -0.360480, -0.132461>}
triangle{<-0.941979, 0.000000, -0.168586>, <-0.870275, -0.360480, -0.132461>, <-0.870275, -0.360480, -0.168586>}
triangle{<-0.870275, -0.360480, -0.168586>, <-0.870275, -0.360480, -0.132461>, <-0.666080, -0.666080, -0.132461>}
triangle{<-0.870275, -0.360480, -0.168586>, <-0.666080, -0.666080, -0.132461>, <-0.666080, -0.666080, -0.168586>}
triangle{<-0.666080, -0.666080, -0.168586>, <-0.666080, -0.666080, -0.132461>, <-0.360480, -0.870275, -0.132461>}
triangle{<-0.666080, -0.666080, -0.168586>, <-0.360480, -0.870275, -0.132461>, <-0.360480, -0.870275, -0.168586>}
triangle{<-0.360480, -0.870275, -0.168586>, <-0.360480, -0.870275, -0.132461>, <-0.000000, -0.941979, -0.132461>}
triangle{<-0.360480, -0.870275, -0.168586>, <-0.000000, -0.941979, -0.132461>, <-0.000000, -0.941979, -0.168586>}
triangle{<-0.000000, -0.941979, -0.168586>, <-0.000000, -0.941979, -0.132461>, <0.360480, -0.870275, -0.132461>}
triangle{<-0.000000, -0.941979, -0.168586>, <0.360480, -0.870275, -0.132461>, <0.360480, -0.870275, -0.168586>}
triangle{<0.360480, -0.870275, -0.168586>, <0.360480, -0.870275, -0.132461>, <0.666080, -0.666080, -0.132461>}
triangle{<0.360480, -0.870275, -0.168586>, <0.666080, -0.666080, -0.132461>, <0.666080, -0.666080, -0.168586>}
triangle{<0.666080, -0.666080, -0.168586>, <0.666080, -0.666080, -0.132461>, <0.870275, -0.360480, -0.132461>}
triangle{<0.666080, -0.666080, -0.168586>, <0.870275, -0.360480, -0.132461>, <0.870275, -0.360480, -0.168586>}
triangle{<0.870275, -0.360480, -0.168586>, <0.870275, -0.360480, -0.132461>, <0.941979, -0.000000, -0.132461>}
triangle{<0.870275, -0.360480, -0.168586>, <0.941979, -0.000000, -0.132461>, <0.941979, -0.000000, -0.168586>}
triangle{<0.941979, -0.000000, -0.168586>, <0.941979, -0.000000, -0.132461>, <0.870275, 0.360480, -0.132461>}
triangle{<0.941979, -0.000000, -0.168586>, <0.870275, 0.360480, -0.132461>, <0.870275, 0.360480, -0.168586>}
triangle{<0.870275, 0.360480, -0.168586>, <0.870275, 0.360480, -0.132461>, <0.666080, 0.666080, -0.132461>}
triangle{<0.870275, 0.360480, -0.168586>, <0.666080, 0.666080, -0.132461>, <0.666080, 0.666080, -0.168586>}
triangle{<0.666080, 0.666080, -0.168586>, <0.666080, 0.666080, -0.132461>, <0.360480, 0.870275, -0.132461>}
triangle{<0.666080, 0.666080, -0.168586>, <0.360480, 0.870275, -0.132461>, <0.360480, 0.870275, -0.168586>}
triangle{<-0.000000, 0.941979, -0.132461>, <-0.000000, 0.941979, -0.168586>, <0.360480, 0.870275, -0.168586>}
triangle{<-0.000000, 0.941979, -0.132461>, <0.360480, 0.870275, -0.168586>, <0.360480, 0.870275, -0.132461>}
triangle{<-0.360480, 0.870275, -0.132461>, <-0.000000, 0.941979, -0.132461>, <-0.062266, 0.150325, 0.555714>}
triangle{<-0.666080, 0.666080, -0.132461>, <-0.360480, 0.870275, -0.132461>, <-0.062266, 0.150325, 0.555714>}
triangle{<-0.870275, 0.360480, -0.132461>, <-0.666080, 0.666080, -0.132461>, <-0.150325, 0.062266, 0.555714>}
triangle{<-0.941979, 0.000000, -0.132461>, <-0.870275, 0.360480, -0.132461>, <-0.150325, 0.062266, 0.555714>}
triangle{<-0.870275, -0.360480, -0.132461>, <-0.941979, 0.000000, -0.132461>, <-0.150325, -0.062266, 0.555714>}
triangle{<-0.666080, -0.666080, -0.132461>, <-0.870275, -0.360480, -0.132461>, <-0.150325, -0.062266, 0.555714>}
triangle{<-0.360480, -0.870275, -0.132461>, <-0.666080, -0.666080, -0.132461>, <-0.062266, -0.150325, 0.555714>}
triangle{<-0.000000, -0.941979, -0.132461>, <-0.360480, -0.870275, -0.132461>, <-0.062266, -0.150325, 0.555714>}
triangle{<0.360480, -0.870275, -0.132461>, <-0.000000, -0.941979, -0.132461>, <0.062266, -0.150325, 0.555714>}
triangle{<0.666080, -0.666080, -0.132461>, <0.360480, -0.870275, -0.132461>, <0.062266, -0.150325, 0.555714>}
triangle{<0.870275, -0.360480, -0.132461>, <0.666080, -0.666080, -0.132461>, <0.150325, -0.062266, 0.555714>}
triangle{<0.941979, -0.000000, -0.132461>, <0.870275, -0.360480, -0.132461>, <0.150325, -0.062266, 0.555714>}
triangle{<0.870275, 0.360480, -0.132461>, <0.941979, -0.000000, -0.132461>, <0.150325, 0.062266, 0.555714>}
triangle{<0.666080, 0.666080, -0.132461>, <0.870275, 0.360480, -0.132461>, <0.150325, 0.062266, 0.555714>}
triangle{<0.360480, 0.870275, -0.132461>, <0.666080, 0.666080, -0.132461>, <0.062266, 0.150325, 0.555714>}
triangle{<-0.000000, 0.941979, -0.132461>, <0.360480, 0.870275, -0.132461>, <0.062266, 0.150325, 0.555714>}
triangle{<-0.062266, 0.150325, 0.555714>, <-0.000000, 0.941979, -0.132461>, <0.062266, 0.150325, 0.555714>}
triangle{<-0.062266, 0.150325, 0.555714>, <0.062266, 0.150325, 0.555714>, <0.000000, -0.000000, 0.686389>}
triangle{<-0.666080, 0.666080, -0.132461>, <-0.062266, 0.150325, 0.555714>, <0.000000, -0.000000, 0.686389>}
triangle{<-0.666080, 0.666080, -0.132461>, <0.000000, -0.000000, 0.686389>, <-0.150325, 0.062266, 0.555714>}
triangle{<-0.941979, 0.000000, -0.132461>, <-0.150325, 0.062266, 0.555714>, <0.000000, -0.000000, 0.686389>}
triangle{<-0.941979, 0.000000, -0.132461>, <0.000000, -0.000000, 0.686389>, <-0.150325, -0.062266, 0.555714>}
triangle{<-0.666080, -0.666080, -0.132461>, <-0.150325, -0.062266, 0.555714>, <0.000000, -0.000000, 0.686389>}
triangle{<-0.666080, -0.666080, -0.132461>, <0.000000, -0.000000, 0.686389>, <-0.062266, -0.150325, 0.555714>}
triangle{<-0.000000, -0.941979, -0.132461>, <-0.062266, -0.150325, 0.555714>, <0.000000, -0.000000, 0.686389>}
triangle{<-0.000000, -0.941979, -0.132461>, <0.000000, -0.000000, 0.686389>, <0.062266, -0.150325, 0.555714>}
triangle{<0.666080, -0.666080, -0.132461>, <0.062266, -0.150325, 0.555714>, <0.000000, -0.000000, 0.686389>}
triangle{<0.666080, -0.666080, -0.132461>, <0.000000, -0.000000, 0.686389>, <0.150325, -0.062266, 0.555714>}
triangle{<0.941979, -0.000000, -0.132461>, <0.150325, -0.062266, 0.555714>, <0.000000, -0.000000, 0.686389>}
triangle{<0.941979, -0.000000, -0.132461>, <0.000000, -0.000000, 0.686389>, <0.150325, 0.062266, 0.555714>}
triangle{<0.666080, 0.666080, -0.132461>, <0.150325, 0.062266, 0.555714>, <0.000000, -0.000000, 0.686389>}
triangle{<0.666080, 0.666080, -0.132461>, <0.000000, -0.000000, 0.686389>, <0.062266, 0.150325, 0.555714>}
triangle{<0.360480, 0.870275, -0.168586>, <-0.000000, 0.941979, -0.168586>, <0.274814, 0.663459, -0.316678>}
triangle{<0.666080, 0.666080, -0.168586>, <0.360480, 0.870275, -0.168586>, <0.274814, 0.663459, -0.316678>}
triangle{<0.870275, 0.360480, -0.168586>, <0.666080, 0.666080, -0.168586>, <0.663459, 0.274814, -0.316678>}
triangle{<0.941979, -0.000000, -0.168586>, <0.870275, 0.360480, -0.168586>, <0.663459, 0.274814, -0.316678>}
triangle{<0.870275, -0.360480, -0.168586>, <0.941979, -0.000000, -0.168586>, <0.663459, -0.274814, -0.316678>}
triangle{<0.666080, -0.666080, -0.168586>, <0.870275, -0.360480, -0.168586>, <0.663459, -0.274814, -0.316678>}
triangle{<0.360480, -0.870275, -0.168586>, <0.666080, -0.666080, -0.168586>, <0.274814, -0.663459, -0.316678>}
triangle{<-0.000000, -0.941979, -0.168586>, <0.360480, -0.870275, -0.168586>, <0.274814, -0.663459, -0.316678>}
triangle{<-0.360480, -0.870275, -0.168586>, <-0.000000, -0.941979, -0.168586>, <-0.274814, -0.663459, -0.316678>}
triangle{<-0.666080, -0.666080, -0.168586>, <-0.360480, -0.870275, -0.168586>, <-0.274814, -0.663459, -0.316678>}
triangle{<-0.870275, -0.360480, -0.168586>, <-0.666080, -0.666080, -0.168586>, <-0.663459, -0.274814, -0.316678>}
triangle{<-0.941979, 0.000000, -0.168586>, <-0.870275, -0.360480, -0.168586>, <-0.663459, -0.274814, -0.316678>}
triangle{<-0.870275, 0.360480, -0.168586>, <-0.941979, 0.000000, -0.168586>, <-0.663459, 0.274814, -0.316678>}
triangle{<-0.666080, 0.666080, -0.168586>, <-0.870275, 0.360480, -0.168586>, <-0.663459, 0.274814, -0.316678>}
triangle{<-0.360480, 0.870275, -0.168586>, <-0.666080, 0.666080, -0.168586>, <-0.274814, 0.663459, -0.316678>}
triangle{<-0.000000, 0.941979, -0.168586>, <-0.360480, 0.870275, -0.168586>, <-0.274814, 0.663459, -0.316678>}
triangle{<0.274814, 0.663459, -0.316678>, <-0.000000, 0.941979, -0.168586>, <-0.274814, 0.663459, -0.316678>}
triangle{<0.274814, 0.663459, -0.316678>, <-0.274814, 0.663459, -0.316678>, <-0.000000, 0.550426, -0.376779>}
triangle{<0.666080, 0.666080, -0.168586>, <0.274814, 0.663459, -0.316678>, <0.389210, 0.389210, -0.376779>}
triangle{<0.666080, 0.666080, -0.168586>, <0.389210, 0.389210, -0.376779>, <0.663459, 0.274814, -0.316678>}
triangle{<0.941979, -0.000000, -0.168586>, <0.663459, 0.274814, -0.316678>, <0.550426, -0.000000, -0.376779>}
triangle{<0.941979, -0.000000, -0.168586>, <0.550426, -0.000000, -0.376779>, <0.663459, -0.274814, -0.316678>}
triangle{<0.666080, -0.666080, -0.168586>, <0.663459, -0.274814, -0.316678>, <0.389210, -0.389210, -0.376779>}
triangle{<0.666080, -0.666080, -0.168586>, <0.389210, -0.389210, -0.376779>, <0.274814, -0.663459, -0.316678>}
triangle{<-0.000000, -0.941979, -0.168586>, <0.274814, -0.663459, -0.316678>, <0.000000, -0.550426, -0.376779>}
triangle{<-0.000000, -0.941979, -0.168586>, <0.000000, -0.550426, -0.376779>, <-0.274814, -0.663459, -0.316678>}
triangle{<-0.666080, -0.666080, -0.168586>, <-0.274814, -0.663459, -0.316678>, <-0.389210, -0.389210, -0.376779>}
triangle{<-0.666080, -0.666080, -0.168586>, <-0.389210, -0.389210, -0.376779>, <-0.663459, -0.274814, -0.316678>}
triangle{<-0.941979, 0.000000, -0.168586>, <-0.663459, -0.274814, -0.316678>, <-0.550426, -0.000000, -0.376779>}
triangle{<-0.941979, 0.000000, -0.168586>, <-0.550426, -0.000000, -0.376779>, <-0.663459, 0.274814, -0.316678>}
triangle{<-0.666080, 0.666080, -0.168586>, <-0.663459, 0.274814, -0.316678>, <-0.389210, 0.389210, -0.376779>}
triangle{<-0.666080, 0.666080, -0.168586>, <-0.389210, 0.389210, -0.376779>, <-0.274814, 0.663459, -0.316678>}
triangle{<0.274814, 0.663459, -0.316678>, <-0.000000, 0.550426, -0.376779>, <0.389210, 0.389210, -0.376779>}
triangle{<0.663459, 0.274814, -0.316678>, <0.389210, 0.389210, -0.376779>, <0.550426, -0.000000, -0.376779>}
triangle{<0.663459, -0.274814, -0.316678>, <0.550426, -0.000000, -0.376779>, <0.389210, -0.389210, -0.376779>}
triangle{<0.274814, -0.663459, -0.316678>, <0.389210, -0.389210, -0.376779>, <0.000000, -0.550426, -0.376779>}
triangle{<-0.274814, -0.663459, -0.316678>, <0.000000, -0.550426, -0.376779>, <-0.389210, -0.389210, -0.376779>}
triangle{<-0.663459, -0.274814, -0.316678>, <-0.389210, -0.389210, -0.376779>, <-0.550426, -0.000000, -0.376779>}
triangle{<-0.663459, 0.274814, -0.316678>, <-0.550426, -0.000000, -0.376779>, <-0.389210, 0.389210, -0.376779>}
triangle{<-0.000000, 0.550426, -0.376779>, <-0.274814, 0.663459, -0.316678>, <-0.389210, 0.389210, -0.376779>}
triangle{<0.389210, 0.389210, -0.376779>, <-0.000000, 0.550426, -0.376779>, <-0.389210, 0.389210, -0.376779>}
triangle{<0.389210, 0.389210, -0.376779>, <-0.389210, 0.389210, -0.376779>, <-0.550426, -0.000000, -0.376779>}
triangle{<0.389210, 0.389210, -0.376779>, <-0.550426, -0.000000, -0.376779>, <-0.389210, -0.389210, -0.376779>}
triangle{<0.389210, 0.389210, -0.376779>, <-0.389210, -0.389210, -0.376779>, <0.000000, -0.550426, -0.376779>}
triangle{<0.389210, 0.389210, -0.376779>, <0.000000, -0.550426, -0.376779>, <0.389210, -0.389210, -0.376779>}
triangle{<0.389210, 0.389210, -0.376779>, <0.389210, -0.389210, -0.376779>, <0.550426, -0.000000, -0.376779>}
inside_vector <1, 1, 1>
scale (0.75 * <1.0, 1.0, -1.0>)
}

// Self-rendering block below
#if (substr(input_file_name, strlen(input_file_name) - 3, 4) = ".inc")
  camera{
    location <1, 1, 1>
    right x*image_width/image_height
    up y
    sky <0, -1, 0>
    look_at<0.0, 0.0, 0.0>
  }
  light_source{<-2, -3, 4>
    color rgb<1.1, 1.0, 1.0>
  }
  object{thingie pigment {color rgb <1, 1, 1>}}
#end
// Self-rendering block end
